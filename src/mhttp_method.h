#ifndef MHTTP_METHOD_H
#define MHTTP_METHOD_H

/* Generated by statmatch.py */

#include <stdlib.h>

enum mhttp_method
{
  MHTTP_METHOD_DELETE = 1,
  MHTTP_METHOD_GET,
  MHTTP_METHOD_HEAD,
  MHTTP_METHOD_OPTIONS,
  MHTTP_METHOD_PATCH,
  MHTTP_METHOD_POST,
  MHTTP_METHOD_PUT
};


static inline const char *mhttp_str_method(enum mhttp_method e)
{
  switch(e)
  {
    case MHTTP_METHOD_DELETE:
      return "DELETE";
    case MHTTP_METHOD_GET:
      return "GET";
    case MHTTP_METHOD_HEAD:
      return "HEAD";
    case MHTTP_METHOD_OPTIONS:
      return "OPTIONS";
    case MHTTP_METHOD_PATCH:
      return "PATCH";
    case MHTTP_METHOD_POST:
      return "POST";
    case MHTTP_METHOD_PUT:
      return "PUT";
    default:
      return NULL;
  }
}


static inline enum mhttp_method mhttp_match_method(const char *str, const char **osp)
{
  enum mhttp_method res = 0;
  char c;
  c = *str++;
  switch(c)
  {
    case 'D':
        c = *str++;
        switch(c)
        {
          case 'E':
              c = *str++;
              switch(c)
              {
                case 'L':
                    c = *str++;
                    switch(c)
                    {
                      case 'E':
                          c = *str++;
                          switch(c)
                          {
                            case 'T':
                                c = *str++;
                                switch(c)
                                {
                                  case 'E':
                                      c = *str++;
                                      switch(c)
                                      {
                                        default:
                                          res = MHTTP_METHOD_DELETE;
                                      }
                                      break;
                                }
                                break;
                          }
                          break;
                    }
                    break;
              }
              break;
        }
        break;
    case 'G':
        c = *str++;
        switch(c)
        {
          case 'E':
              c = *str++;
              switch(c)
              {
                case 'T':
                    c = *str++;
                    switch(c)
                    {
                      default:
                        res = MHTTP_METHOD_GET;
                    }
                    break;
              }
              break;
        }
        break;
    case 'H':
        c = *str++;
        switch(c)
        {
          case 'E':
              c = *str++;
              switch(c)
              {
                case 'A':
                    c = *str++;
                    switch(c)
                    {
                      case 'D':
                          c = *str++;
                          switch(c)
                          {
                            default:
                              res = MHTTP_METHOD_HEAD;
                          }
                          break;
                    }
                    break;
              }
              break;
        }
        break;
    case 'O':
        c = *str++;
        switch(c)
        {
          case 'P':
              c = *str++;
              switch(c)
              {
                case 'T':
                    c = *str++;
                    switch(c)
                    {
                      case 'I':
                          c = *str++;
                          switch(c)
                          {
                            case 'O':
                                c = *str++;
                                switch(c)
                                {
                                  case 'N':
                                      c = *str++;
                                      switch(c)
                                      {
                                        case 'S':
                                            c = *str++;
                                            switch(c)
                                            {
                                              default:
                                                res = MHTTP_METHOD_OPTIONS;
                                            }
                                            break;
                                      }
                                      break;
                                }
                                break;
                          }
                          break;
                    }
                    break;
              }
              break;
        }
        break;
    case 'P':
        c = *str++;
        switch(c)
        {
          case 'A':
              c = *str++;
              switch(c)
              {
                case 'T':
                    c = *str++;
                    switch(c)
                    {
                      case 'C':
                          c = *str++;
                          switch(c)
                          {
                            case 'H':
                                c = *str++;
                                switch(c)
                                {
                                  default:
                                    res = MHTTP_METHOD_PATCH;
                                }
                                break;
                          }
                          break;
                    }
                    break;
              }
              break;
          case 'O':
              c = *str++;
              switch(c)
              {
                case 'S':
                    c = *str++;
                    switch(c)
                    {
                      case 'T':
                          c = *str++;
                          switch(c)
                          {
                            default:
                              res = MHTTP_METHOD_POST;
                          }
                          break;
                    }
                    break;
              }
              break;
          case 'U':
              c = *str++;
              switch(c)
              {
                case 'T':
                    c = *str++;
                    switch(c)
                    {
                      default:
                        res = MHTTP_METHOD_PUT;
                    }
                    break;
              }
              break;
        }
        break;
  }

  if(osp)
  {
    *osp = str;
  }

  return res;
}

#endif
